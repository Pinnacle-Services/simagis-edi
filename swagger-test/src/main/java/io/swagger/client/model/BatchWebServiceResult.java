/*
 * test
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.WebServiceResult;
import java.util.ArrayList;
import java.util.List;

/**
 * BatchWebServiceResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-14T19:57:48.517Z")
public class BatchWebServiceResult {
  /**
   * State of the execution. Can be of the following values:  - Pending: The batch execution was submitted but is not yet scheduled. Ready: The batch execution was submitted and can be executed. InProgress: The batch execution is currently being processed. Complete: The batch execution has been completed.
   */
  public enum StateEnum {
    @SerializedName("pending")
    PENDING("pending"),
    
    @SerializedName("inProgress")
    INPROGRESS("inProgress"),
    
    @SerializedName("ready")
    READY("ready"),
    
    @SerializedName("complete")
    COMPLETE("complete");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("completedItemCount")
  private Integer completedItemCount = null;

  @SerializedName("totalItemCount")
  private Integer totalItemCount = null;

  @SerializedName("batchExecutionResults")
  private List<WebServiceResult> batchExecutionResults = new ArrayList<WebServiceResult>();

  public BatchWebServiceResult state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * State of the execution. Can be of the following values:  - Pending: The batch execution was submitted but is not yet scheduled. Ready: The batch execution was submitted and can be executed. InProgress: The batch execution is currently being processed. Complete: The batch execution has been completed.
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "State of the execution. Can be of the following values:  - Pending: The batch execution was submitted but is not yet scheduled. Ready: The batch execution was submitted and can be executed. InProgress: The batch execution is currently being processed. Complete: The batch execution has been completed.")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public BatchWebServiceResult completedItemCount(Integer completedItemCount) {
    this.completedItemCount = completedItemCount;
    return this;
  }

   /**
   * Number of completed items in this batch operation.
   * @return completedItemCount
  **/
  @ApiModelProperty(example = "null", value = "Number of completed items in this batch operation.")
  public Integer getCompletedItemCount() {
    return completedItemCount;
  }

  public void setCompletedItemCount(Integer completedItemCount) {
    this.completedItemCount = completedItemCount;
  }

  public BatchWebServiceResult totalItemCount(Integer totalItemCount) {
    this.totalItemCount = totalItemCount;
    return this;
  }

   /**
   * Number of total items in this batch operation.
   * @return totalItemCount
  **/
  @ApiModelProperty(example = "null", value = "Number of total items in this batch operation.")
  public Integer getTotalItemCount() {
    return totalItemCount;
  }

  public void setTotalItemCount(Integer totalItemCount) {
    this.totalItemCount = totalItemCount;
  }

  public BatchWebServiceResult batchExecutionResults(List<WebServiceResult> batchExecutionResults) {
    this.batchExecutionResults = batchExecutionResults;
    return this;
  }

  public BatchWebServiceResult addBatchExecutionResultsItem(WebServiceResult batchExecutionResultsItem) {
    this.batchExecutionResults.add(batchExecutionResultsItem);
    return this;
  }

   /**
   * The responses of the individual executions.
   * @return batchExecutionResults
  **/
  @ApiModelProperty(example = "null", value = "The responses of the individual executions.")
  public List<WebServiceResult> getBatchExecutionResults() {
    return batchExecutionResults;
  }

  public void setBatchExecutionResults(List<WebServiceResult> batchExecutionResults) {
    this.batchExecutionResults = batchExecutionResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchWebServiceResult batchWebServiceResult = (BatchWebServiceResult) o;
    return Objects.equals(this.state, batchWebServiceResult.state) &&
        Objects.equals(this.completedItemCount, batchWebServiceResult.completedItemCount) &&
        Objects.equals(this.totalItemCount, batchWebServiceResult.totalItemCount) &&
        Objects.equals(this.batchExecutionResults, batchWebServiceResult.batchExecutionResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, completedItemCount, totalItemCount, batchExecutionResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchWebServiceResult {\n");
    
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    completedItemCount: ").append(toIndentedString(completedItemCount)).append("\n");
    sb.append("    totalItemCount: ").append(toIndentedString(totalItemCount)).append("\n");
    sb.append("    batchExecutionResults: ").append(toIndentedString(batchExecutionResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

